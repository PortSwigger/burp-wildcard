/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hvqzao.wildcard;

import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;

/**
 *
 * @author nme
 */
public class WildcardOptionsPane extends javax.swing.JPanel {

    /**
     * Creates new form OptionsPnae
     */
    public WildcardOptionsPane() {
        initComponents();
    }

    public JButton getOptionsSettingsDefaults() {
        return OptionsSettingsDefaults;
    }

    public JLabel getOptionsSettingsDescription() {
        return OptionsSettingsDescription;
    }

    public JButton getOptionsSettingsHelp() {
        return OptionsSettingsHelp;
    }

    public JCheckBox getOptionsSettingsPersistency() {
        return OptionsSettingsPersistency;
    }

    public JCheckBox getOptionsSettingsShortenTab() {
        return OptionsSettingsShortenTab;
    }

    public JLabel getOptionsSettingsTitle() {
        return OptionsSettingsTitle;
    }

    public JCheckBox getOptionsSettingsUnsupported() {
        return OptionsSettingsUnsupported;
    }

    public JCheckBox getOptionsSettingsHijack() {
        return OptionsSettingsHijack;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OptionsSettingsHelp = new javax.swing.JButton();
        OptionsSettingsDefaults = new javax.swing.JButton();
        OptionsSettingsTitle = new javax.swing.JLabel();
        OptionsSettingsDescription = new javax.swing.JLabel();
        OptionsSettingsUnsupported = new javax.swing.JCheckBox();
        OptionsSettingsPersistency = new javax.swing.JCheckBox();
        OptionsSettingsShortenTab = new javax.swing.JCheckBox();
        OptionsSettingsHijack = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        OptionsSettingsHelp.setMargin(new java.awt.Insets(0, 0, 0, 0));
        OptionsSettingsHelp.setMaximumSize(new java.awt.Dimension(24, 24));
        OptionsSettingsHelp.setMinimumSize(new java.awt.Dimension(24, 24));
        OptionsSettingsHelp.setPreferredSize(new java.awt.Dimension(24, 24));

        OptionsSettingsDefaults.setMargin(new java.awt.Insets(0, 0, 0, 0));
        OptionsSettingsDefaults.setMaximumSize(new java.awt.Dimension(24, 24));
        OptionsSettingsDefaults.setMinimumSize(new java.awt.Dimension(24, 24));
        OptionsSettingsDefaults.setPreferredSize(new java.awt.Dimension(24, 24));

        OptionsSettingsTitle.putClientProperty("html.disable", null);
        OptionsSettingsTitle.setText("<html><b style='color:#e58900;font-size:10px'>Settings</b></html>");

        OptionsSettingsDescription.putClientProperty("html.disable", null);
        OptionsSettingsDescription.setText("<html>Use these settings to control extension behavior.</html>");

        OptionsSettingsUnsupported.setText("Enable features not officially supported by Burp Extender");

        OptionsSettingsPersistency.setText("Remember those settings (potentially unsafe)");

        OptionsSettingsShortenTab.setText("Shorten extension name on main tab");

        OptionsSettingsHijack.setText("Hijack tabs belonging to other extensions");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(OptionsSettingsHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OptionsSettingsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(OptionsSettingsDefaults, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OptionsSettingsDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OptionsSettingsUnsupported)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(OptionsSettingsPersistency))
                            .addComponent(OptionsSettingsShortenTab)
                            .addComponent(OptionsSettingsHijack))))
                .addContainerGap(339, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(OptionsSettingsHelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OptionsSettingsDefaults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(OptionsSettingsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OptionsSettingsDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OptionsSettingsUnsupported)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OptionsSettingsPersistency)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OptionsSettingsShortenTab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OptionsSettingsHijack)
                .addContainerGap(144, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OptionsSettingsDefaults;
    private javax.swing.JLabel OptionsSettingsDescription;
    private javax.swing.JButton OptionsSettingsHelp;
    private javax.swing.JCheckBox OptionsSettingsHijack;
    private javax.swing.JCheckBox OptionsSettingsPersistency;
    private javax.swing.JCheckBox OptionsSettingsShortenTab;
    private javax.swing.JLabel OptionsSettingsTitle;
    private javax.swing.JCheckBox OptionsSettingsUnsupported;
    // End of variables declaration//GEN-END:variables
}
